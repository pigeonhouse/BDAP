{"ast":null,"code":"import \"antd/es/card/style/css\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/checkbox/style/css\";\nimport _Checkbox from \"antd/es/checkbox\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/row/style/css\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style/css\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/notification/style/css\";\nimport _notification from \"antd/es/notification\";\nimport \"antd/es/message/style/css\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"/Users/Halloween/Documents/GitHub/BigDataPlayground/new_frontEnd/src/Homepage/index.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport \"./index.less\";\nimport style from './index.less';\nconst FormItem = _Form.Item;\n\nclass HomePage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      redirect: false,\n      username: '',\n      password: '',\n      remind: '',\n      rememberPassword: false\n    };\n\n    this.loadAccountInfo = () => {\n      let arr,\n          reg = new RegExp(\"(^| )\" + 'accountInfo' + \"=([^;]*)(;|$)\");\n      let accountInfo = '';\n\n      if (arr = document.cookie.match(reg)) {\n        accountInfo = unescape(arr[2]);\n      } else {\n        accountInfo = null;\n      }\n\n      if (Boolean(accountInfo) == false) {\n        return false;\n      } else {\n        let userName = \"\";\n        let passWord = \"\";\n        let Remind = \"\";\n        let i = new Array();\n        i = accountInfo.split(\"&\");\n        this.setState({\n          username: i[0],\n          password: i[1],\n          remind: i[2]\n        });\n      }\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      let userInfo = this.props.form.getFieldsValue();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          if (values.username === 'demo' && values.password === '123456') {\n            if (values.remember) {\n              let accountInfo = '';\n              if (this.state.remind === '') accountInfo = values.username + '&' + values.password + '&' + 'true';else accountInfo = values.username + '&' + values.password + '&' + this.state.remind;\n              let Days = 3;\n              let exp = new Date();\n              exp.setTime(exp.getTime() + Days * 24 * 60 * 60 * 1000);\n              document.cookie = 'accountInfo' + \"=\" + escape(accountInfo) + \";expires=\" + exp.toGMTString();\n            }\n\n            this.setState({\n              redirect: true\n            });\n\n            _message.success(\"\".concat(userInfo.username, \", welcome\"));\n          } else {\n            alert('Password error');\n          }\n        }\n      });\n    };\n  }\n\n  componentWillMount() {\n    this.loadAccountInfo();\n  }\n\n  render() {\n    if (this.state.redirect) {\n      _notification['success']({\n        message: '进入模式选择页面',\n        description: '在这里选择使用的模式',\n        duration: 1\n      });\n\n      this.setState({\n        redirect: false\n      });\n      return React.createElement(Redirect, {\n        to: \"/route\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      });\n    }\n\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(\"div\", {\n      className: \"editor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(_Row, {\n      style: {\n        lineHeight: '40px',\n        height: '40px',\n        backgroundColor: '#343941',\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      style: {\n        border: 0,\n        backgroundColor: '#343941',\n        color: \"#ddd\"\n      },\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"bars\",\n      style: {\n        fontSize: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }))), React.createElement(_Col, {\n      span: 21,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      style: {\n        border: 0,\n        backgroundColor: '#343941',\n        color: \"#ddd\",\n        fontSize: 18,\n        fontFamily: 'consolas'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"BigDataPlayground Local-Mode\")), React.createElement(_Col, {\n      span: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"https://www.yuque.com/ddrid/tx7z84\",\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      style: {\n        border: 0,\n        backgroundColor: '#343941',\n        color: \"#ddd\",\n        fontSize: 25\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"question-circle\",\n      \"data-step\": \"5\",\n      \"data-intro\": \"\\u5982\\u679C\\u60F3\\u8981\\u8FDB\\u4E00\\u6B65\\u4E86\\u89E3\\u8BE6\\u7EC6\\u7684\\u4F7F\\u7528\\u6559\\u7A0B\\u53CA\\u7EC4\\u4EF6\\u4ECB\\u7ECD\\uFF0C\\u8BF7\\u70B9\\u51FB\\u6B64\\u5904\\u67E5\\u770B\\u6587\\u6863\\u3002\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })))), React.createElement(\"a\", {\n      href: \"https://github.com/pigeonhouse/BigDataPlayground\",\n      target: \"_blank\",\n      className: style.githubCorner,\n      \"aria-label\": \"View source on GitHub\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      width: \"45\",\n      height: \"45\",\n      viewBox: \"0 0 250 250\",\n      style: {\n        fill: '#fff',\n        color: '#343941',\n        position: 'absolute',\n        top: 0,\n        border: 0,\n        right: 0\n      },\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"path\", {\n      d: \"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"path\", {\n      d: \"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\",\n      fill: \"currentColor\",\n      style: {\n        transformOrigin: '130px 106px'\n      },\n      className: style.octoArm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"path\", {\n      d: \"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\",\n      fill: \"currentColor\",\n      className: style.octoBody,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })))), React.createElement(_Row, {\n      style: {\n        alignItems: 'center',\n        verticalAlign: 'middle',\n        margin: '0 auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 15,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(_Col, {\n      span: 6,\n      style: {\n        margin: '0 auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(_Card, {\n      title: \"Welcome to demo!\",\n      className: style.loginCard,\n      color: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(_Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, getFieldDecorator('username', {\n      initialValue: this.state.username,\n      rules: [{\n        required: true,\n        message: 'User name cannot be empty'\n      }, {\n        min: 4,\n        max: 20,\n        message: 'Length is out of range'\n      }, {\n        pattern: new RegExp('^\\\\w+$', 'g'),\n        message: 'User names must be alphanumeric or underlined'\n      }]\n    })(React.createElement(_Input, {\n      prefix: React.createElement(_Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }),\n      placeholder: \"username:demo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }))), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, getFieldDecorator('password', {\n      initialValue: this.state.password,\n      rules: [{\n        required: true,\n        message: 'Password cannot be empty'\n      }]\n    })(React.createElement(_Input, {\n      prefix: React.createElement(_Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }),\n      placeholder: \"password:123456\",\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, getFieldDecorator('remember', {\n      valuePropName: 'checked',\n      initialValue: true\n    })(React.createElement(_Checkbox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Remember me\")), React.createElement(\"a\", {\n      className: style.loginFormForgot,\n      href: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Forgot password\"), React.createElement(_Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: style.loginButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Log in\"))))), React.createElement(_Col, {\n      span: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default _Form.create()(HomePage);","map":{"version":3,"sources":["/Users/Halloween/Documents/GitHub/BigDataPlayground/new_frontEnd/src/Homepage/index.js"],"names":["React","Redirect","style","FormItem","Item","HomePage","Component","state","redirect","username","password","remind","rememberPassword","loadAccountInfo","arr","reg","RegExp","accountInfo","document","cookie","match","unescape","Boolean","userName","passWord","Remind","i","Array","split","setState","handleSubmit","e","preventDefault","userInfo","props","form","getFieldsValue","validateFields","err","values","remember","Days","exp","Date","setTime","getTime","escape","toGMTString","success","alert","componentWillMount","render","message","description","duration","getFieldDecorator","lineHeight","height","backgroundColor","color","border","fontSize","fontFamily","githubCorner","fill","position","top","right","transformOrigin","octoArm","octoBody","alignItems","verticalAlign","margin","loginCard","initialValue","rules","required","min","max","pattern","valuePropName","loginFormForgot","loginButton","create"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Row, Col, Card, Form, Input, Button, message, Icon, Checkbox, notification} from 'antd';\nimport { Redirect } from 'react-router-dom';\nimport \"./index.less\"\nimport style from './index.less';\n\nconst FormItem = Form.Item;\n\n\nclass HomePage extends React.Component {\n    state={\n        redirect:false,\n        username: '',\n        password: '',\n        remind:'',\n        rememberPassword: false,\n    }\n\n\n\n    loadAccountInfo=()=>{\n        let arr,reg=new RegExp(\"(^| )\"+'accountInfo'+\"=([^;]*)(;|$)\");\n        let accountInfo =''\n        if(arr=document.cookie.match(reg)){\n            accountInfo = unescape(arr[2]);\n        }\n        else{\n            accountInfo = null;\n        }\n        if(Boolean(accountInfo) == false){\n            return false;\n        }else{\n            let userName = \"\";\n            let passWord = \"\";\n            let Remind = \"\";\n\n            let i=new Array()\n            i = accountInfo.split(\"&\");\n                this.setState({\n                    username: i[0],\n                    password: i[1],\n                    remind: i[2]\n                })\n        }\n    }\n    componentWillMount() {\n        this.loadAccountInfo();\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        let userInfo = this.props.form.getFieldsValue();\n        this.props.form.validateFields((err,values)=>{\n            if(!err){\n                if(values.username==='demo' && values.password==='123456'){\n                    if(values.remember){\n                        let accountInfo = '';\n                        if(this.state.remind === '')\n                            accountInfo = values.username+ '&' +values.password + '&' + 'true';\n                        else accountInfo = values.username+ '&' +values.password + '&' + this.state.remind;\n                        let Days = 3;\n                        let exp = new Date();\n                        exp.setTime(exp.getTime() + Days*24*60*60*1000);\n                        document.cookie = 'accountInfo' + \"=\"+ escape(accountInfo) + \";expires=\" + exp.toGMTString()\n                    }\n                    this.setState({redirect: true});\n                    message.success(`${userInfo.username}, welcome`);\n                }\n                else {\n                    alert('Password error');\n                }\n            }\n        })\n    }\n\n    render() {\n        if (this.state.redirect) {\n            notification['success']({\n                message: '进入模式选择页面',\n                description: '在这里选择使用的模式',\n                duration: 1\n            });\n            this.setState({redirect:false})\n            return <Redirect to=\"/route\" />;\n        }\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <div className = \"editor\" >\n                <Row\n                    style={{ lineHeight: '40px',height: '40px', backgroundColor:'#343941',color:\"white\" }}\n                >\n                    <Col span={1}>\n                        <Button style={{border:0,backgroundColor:'#343941',color:\"#ddd\"}} size=\"large\">\n                            <Icon type=\"bars\" style={{fontSize:20}} />\n                        </Button>\n                    </Col>\n                    <Col span={21}>\n                        <Button style={{border:0,backgroundColor:'#343941',color:\"#ddd\",fontSize:18,fontFamily:'consolas'}}>BigDataPlayground Local-Mode</Button>\n                    </Col>\n                    <Col span={2}>\n                        <a href=\"https://www.yuque.com/ddrid/tx7z84\"target=\"_blank\">\n                            <Button style={{border:0,backgroundColor:'#343941',color:\"#ddd\",fontSize:25}} >\n                                <Icon type=\"question-circle\" data-step=\"5\" data-intro=\"如果想要进一步了解详细的使用教程及组件介绍，请点击此处查看文档。\"/>\n                            </Button>\n                        </a>\n                    </Col>\n                    <a href=\"https://github.com/pigeonhouse/BigDataPlayground\"target=\"_blank\" className={style.githubCorner} aria-label=\"View source on GitHub\">\n                        <svg\n                            width=\"45\"\n                            height=\"45\"\n                            viewBox=\"0 0 250 250\"\n                            style={{\n                                fill:'#fff',\n                                color:'#343941',\n                                position: 'absolute',\n                                top: 0,\n                                border: 0,\n                                right: 0}}\n                            aria-hidden=\"true\">\n                            <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path>\n                            <path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\" fill=\"currentColor\" style={{transformOrigin: '130px 106px'}} className={style.octoArm}></path>\n                            <path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\" fill=\"currentColor\" className={style.octoBody}></path>\n                        </svg>\n                    </a>\n                </Row>\n                <Row style={{alignItems:'center', verticalAlign: 'middle', margin: '0 auto'}}>\n                    <Col span={15} />\n                    <Col span={6} style={{margin: '0 auto'}}>\n                        <Card title=\"Welcome to demo!\"  className={style.loginCard} color='black' >\n                            <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                                <FormItem>\n                                    {\n                                        getFieldDecorator('username',{\n                                            initialValue: this.state.username,\n                                            rules:[\n                                                {\n                                                    required:true,\n                                                    message:'User name cannot be empty'\n                                                },\n                                                {\n                                                    min:4,max:20,\n                                                    message:'Length is out of range'\n                                                },\n                                                {\n                                                    pattern:new RegExp('^\\\\w+$','g'),\n                                                    message:'User names must be alphanumeric or underlined'\n                                                }\n                                            ]\n                                        })(\n                                            <Input\n                                                prefix={<Icon type='user' style={{ color: 'rgba(0,0,0,.25)'}}/>}\n                                                placeholder='username:demo'\n                                            ></Input>\n                                        )\n                                    }\n                                </FormItem>\n                                <FormItem>\n                                    {\n                                        getFieldDecorator('password',{\n                                            initialValue:this.state.password,\n                                            rules:[\n                                                {\n                                                    required:true,\n                                                    message:'Password cannot be empty'\n                                                },\n                                            ]\n                                        })(\n                                            <Input\n                                                prefix={<Icon type='lock' style={{ color: 'rgba(0,0,0,.25)'}}/>}\n                                                placeholder='password:123456' type='password'\n                                            ></Input>\n                                        )\n                                    }\n                                </FormItem>\n                                <Form.Item>\n                                    {\n                                        getFieldDecorator('remember', {\n                                            valuePropName: 'checked',\n                                            initialValue: true,\n                                        })(\n                                            <Checkbox>Remember me</Checkbox>\n                                        )}\n                                    <a className={style.loginFormForgot} href=\"\">Forgot password</a>\n                                    <Button type='primary'htmlType=\"submit\" className={style.loginButton}>Log in</Button>\n                                </Form.Item>\n                            </Form>\n                        </Card>\n                    </Col>\n                    <Col span={3} />\n                </Row>\n            </div>\n        );\n    }\n}\n\n\nexport default Form.create()(HomePage);\n"]},"metadata":{},"sourceType":"module"}